@page "/TiposTecnicos/Create"
@rendermode InteractiveServer
@inject TiposTecnicosService tiposTecnicosService
@inject NavigationManager navigation

<PageTitle>Crear Tipos T&eacute;cnico</PageTitle>
<EditForm Model="TiposTecnico" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header">
                <h5 class="card-title">Crear Tipos T&eacute;cnico</h5>
            </div>

            <div class="card-body">
                @*Datos*@
                <label for="id" class="form-label"><strong>ID</strong></label>
                <InputNumber id="id" class="form-control" @bind-Value="TiposTecnico.Id" readonly></InputNumber>

                <label for="NombreTecnico" class="form-label"><strong>Nombre</strong></label>
                <InputText id="NombreTecnico" class="form-control" @bind-Value="TiposTecnico.Descripcion"></InputText>
                <ValidationMessage For="@(()=> TiposTecnico.Descripcion)"></ValidationMessage>

            
            <div class="card-footer">
               <a href="/TiposTecnicos/Index" class="btn btn-secondary text-white bi bi-arrow-90deg-left"> Volver</a>
                <button type="submit" class="btn btn-success bi bi-floppy-fill"> Guardar</button>
            </div>
            @if (!string.IsNullOrEmpty(Mensaje))
            {
                <div class="alert alert-warning mt-3" role="alert">
                    @Mensaje
                </div>
            }
        </div>
    </div>
    </div>

</EditForm>

@code {
    [Parameter]
    public int TecnicosId { get; set; }

    public TiposTecnicos TiposTecnico { get; set; } = new TiposTecnicos();
    public bool Repetido { get; set; }
    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (TecnicosId > 0)
        {
            TiposTecnico = await tiposTecnicosService.Buscar(TecnicosId);
        }
    }

    public async Task<bool> Validar()
    {
        var existe = await tiposTecnicosService.ExisteDescripcion(TiposTecnico.Descripcion);
        Repetido = existe;
        return !Repetido;
    }

    public async Task Modificar()
    {
        if (await Validar())
        {
            await tiposTecnicosService.Guardar(TiposTecnico);
            TiposTecnico = new TiposTecnicos();
            navigation.NavigateTo("/TiposTecnicos/Index");
        }
        else
        {
            Mensaje = "La Descripción del Tipo Técnico ya existe. Por favor, elija otra.";
        }
    }
}
