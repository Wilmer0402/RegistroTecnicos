@page "/Trabajos/Index"
@rendermode InteractiveServer
@inject TrabajosService trabajosService
@inject TecnicoService tecnicosService
@inject ClientesService clientesService
@inject NavigationManager navigation

<PageTitle>Registro de Trabajos</PageTitle>

<div class="container">
    <div class="card-header bg-success text-white text-center">
        <div style="display: flex; align-items: center; justify-content: center;">
            <!-- Icono izquierdo-->
            <i class="bi bi-people-fill" style="font-size: 2rem;"></i>

            <!-- Título en el centro -->
            <h3 style="margin: 0 15px;"><strong>Registro de Trabajos</strong></h3>

            <!-- Icono derecho -->
            <i class="bi bi-people-fill" style="font-size: 2rem;"></i>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <label for="filtro" class="form-label"><strong>Filtrar por:</strong></label>
            <InputSelect id="filtro" class="form-select" @bind-Value="filtro">
                <option value="ID">ID</option>
            </InputSelect>
        </div>
        <div class="col-md-6">
            <label for="valorFiltro" class="form-label"><strong>Búsqueda</strong></label>
            <div class="input-group">
                <InputText id="valorFiltro" @bind-Value="valorFiltro" class="form-control" placeholder="Buscar" />
                <button @onclick="Buscar" class="btn btn-secondary bi bi-search" type="button"> Buscar</button>
            </div>
        </div>
    </div>

    <div class="card-body">
        <table class="table table-light table-bordered">
            <thead class="table table-striped text-center bg-success text-white">
                <tr>
                    <th>TrabajoId</th>
                    <th>Fecha</th>
                    <th>ClienteId</th>
                    <th>Cliente</th>
                    <th>T&eacute;cnicoId</th>
                    <th>T&eacute;cnico</th>
                    <th>Descripci&oacute;n</th>
                    <th>Monto</th>
                    <th>Detalles</th>
                    <th>Modificar</th>
                    <th>Eliminar</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var trabajo in trabajos)
                {
                    <tr>
                        <td class="text-center">@trabajo.TrabajoId</td>
                        <td class="text-center">@trabajo.Fecha.ToShortDateString()</td>
                        <td class="text-center">@trabajo.ClienteId</td> 
                        <td class="text-center">@trabajo.Clientes.Nombres</td>
                        <td class="text-center">@trabajo.TecnicoId</td> 
                        <td class="text-center">@trabajo.Tecnicos.NombresTecnico</td>
                        <td class="text-center">@trabajo.Descripcion</td> 
                        <td class="text-center">@trabajo.Monto.ToString("N2")</td>

                        <td class="text-center">
                            <a href="/Trabajos/Details/@trabajo.TrabajoId" class="btn btn-secondary text-white bi bi-eye"></a>
                        </td>
                        <td class="text-center">
                            <a href="/Trabajos/Edit/@trabajo.TrabajoId" class="btn btn-secondary text-white bi bi-pencil-square"></a>
                        </td>
                        <td class="text-center">
                            <a href="/Trabajos/Delete/@trabajo.TrabajoId" class="btn btn-secondary bi bi-trash"></a>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
        <a href="/Trabajos/Create" class="btn btn-success bi bi-plus-square-fill mt-3"> Crear</a>
    </div>
</div>

@code {
    public List<Trabajos> trabajos = new List<Trabajos>();
    public string filtro = "ID";
    public string valorFiltro = "";

    protected override async Task OnInitializedAsync()
    {
        trabajos = await trabajosService.Listar(a => true);
    }

    public async Task Buscar()
    {
        if (!string.IsNullOrWhiteSpace(valorFiltro))
        {
            switch (filtro)
            {
                case "ID":
                    if (int.TryParse(valorFiltro, out int id))
                    {
                        trabajos = await trabajosService.Listar(w => w.TrabajoId == id);
                    }
                    break;

                case "Nombre":
                    trabajos = await trabajosService.Listar(w =>
                          w.Clientes.Nombres.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase) ||
                          w.Tecnicos.NombresTecnico.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase)
                      );
                    break;
            }
        }
        else
        {
            trabajos = await trabajosService.Listar(a => true);
        }
    }
}
