@page "/Trabajos/Index"
@rendermode InteractiveServer
@inject TrabajosService trabajosService
@inject TecnicoService tecnicosService
@inject ClientesService clientesService
@inject PrioridadesService prioridadesService
@inject NavigationManager navigation

<PageTitle>Registro de Trabajos</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header text-black text-center">
            <h5><strong>Registro de Trabajos</strong></h5>
        </div>

        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-6">
                    <label for="filtro">Filtrar por:</label>
                    <select id="filtro" class="form-select" @bind="FiltroSeleccionado">
                        <option value="ID">ID</option>
                    </select>
                </div>
                <div class="col-md-6 d-flex align-items-end">
                    <div class="input-group">
                        <InputText id="valorFiltro" @bind-Value="valorFiltro" class="form-control" placeholder="Buscar" />
                        <button @onclick="Buscar" class="btn btn-secondary bi bi-search"> Buscar</button>
                    </div>
                </div>
            </div>

            @* Botón Crear Trabajo *@
            <a href="/Trabajos/Create" class="btn btn-success bi bi-plus-square-fill mt-3"> Crear</a>

            @* Tabla de Trabajos *@
            <table class="table table-hover">
                <thead class="table table-striped text-center text-black">
                    <tr>
                        <th>TrabajoId</th>
                        <th>Fecha</th>
                        <th>ClienteId</th>
                        <th>Cliente</th>
                        <th>T&eacute;cnicoId</th>
                        <th>T&eacute;cnico</th>
                        <th>Descripci&oacute;n</th>
                        <th>Prioridades</th>
                        <th>Monto</th>
                        <th>Detalles</th>
                        <th>Modificar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var trabajo in trabajos)
                    {
                        <tr>
                            <td class="text-center">@trabajo.TrabajoId</td>
                            <td class="text-center">@trabajo.Fecha.ToShortDateString()</td>
                            <td class="text-center">@trabajo.ClienteId</td>
                            <td class="text-center">@trabajo.Clientes.Nombres</td>
                            <td class="text-center">@trabajo.TecnicoId</td>
                            <td class="text-center">@trabajo.Tecnicos.NombresTecnico</td>
                            <td class="text-center">@trabajo.Descripcion</td>
                            <td class="text-center">@trabajo.Prioridades.Descripcion</td>
                            <td class="text-center">@trabajo.Monto.ToString("N2")</td>

                            <td class="text-center">
                                <a href="/Trabajos/Details/@trabajo.TrabajoId" class="btn btn-outline-dark bi bi-eye"></a>
                            </td>
                            <td class="text-center">
                                <a href="/Trabajos/Edit/@trabajo.TrabajoId" class="btn btn-outline-dark bi bi-pencil-square"></a>
                            </td>
                            <td class="text-center">
                                <a href="/Trabajos/Delete/@trabajo.TrabajoId" class="btn btn-outline-dark bi bi-trash"></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    public List<Trabajos> trabajos = new List<Trabajos>();
    public string FiltroSeleccionado { get; set; } = "ID";
    public string valorFiltro = "";

    protected override async Task OnInitializedAsync()
    {
        trabajos = await trabajosService.Listar(a => true);
    }

    public async Task Buscar()
    {
        if (!string.IsNullOrWhiteSpace(valorFiltro))
        {
            switch (FiltroSeleccionado)
            {
                case "ID":
                    if (int.TryParse(valorFiltro, out int id))
                    {
                        trabajos = await trabajosService.Listar(w => w.TrabajoId == id);
                    }
                    break;

                case "Nombre":
                    trabajos = await trabajosService.Listar(w =>
                          w.Clientes.Nombres.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase) ||
                          w.Tecnicos.NombresTecnico.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase)
                      );
                    break;
            }
        }
        else
        {
            trabajos = await trabajosService.Listar(a => true);
        }
    }
}
