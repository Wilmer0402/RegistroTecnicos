@page "/Tecnicos/Delete/{TecnicosId:int}"
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject NavigationManager navigation

<PageTitle>Eliminar T&eacute;cnico</PageTitle>
<EditForm Model="tecnicos" OnValidSubmit="EliminarTecnico">
	<DataAnnotationsValidator />
	<div class="card-shadow-lg">
		<div class="card-header text-black text-center" style="display: flex; align-items: center; justify-content: center;">
			<h4 style="margin: 0 15px;"><strong>Eliminar T&eacute;cnico:</strong></h4>
		</div>
		<div class="card-body">
			<h5><strong>¿Seguro que deseas eliminar el T&eacute;cnico Selecionado?</strong></h5>
			<div class="mb-1"></div>
			<p class="mb-0"><strong>Tecnico Id:</strong> @tecnicos.TecnicoId</p>
			<div class="mb-1">
				<p class="mb-0"><strong>Nombre Tecnico:</strong> @tecnicos.NombresTecnico</p>
				<div class="mb-1">
					<div class="mb-1">
						<p class="mb-0"><strong>Descripci&oacute;n:</strong> @tecnicos.TiposTecnicos.Descripcion</p>
					</div>
					<p class="mb-0"><strong>Sueldo por Hora:</strong> @tecnicos.SueldoHora</p>
					<div class="mb-1">
					</div>
				</div>

				<div class="card-footer">
					<a href="/Tecnicos/Index" class="btn btn-secondary text-white bi bi-arrow-90deg-left"> Volver</a>
					<button type="button" class="btn btn-success bi bi-trash" @onclick=EliminarTecnico> Eliminar</button>
				</div>
			</div>
		</div>
	</div>
</EditForm>



@code {

	[Parameter]
	public int TecnicosId { get; set; }
	public Tecnicos tecnicos { get; set; } = new Tecnicos();

	protected override async Task OnInitializedAsync()
	{
		if (TecnicosId > 0)
		{
			tecnicos = (await tecnicoService.Buscar(TecnicosId));
		}

	}

	public async Task EliminarTecnico()
	{
		var eliminar = await tecnicoService.Eliminar(tecnicos.TecnicoId);

		if (eliminar)
		{
			navigation.NavigateTo("/Tecnicos/Index");
		}

	}


}
