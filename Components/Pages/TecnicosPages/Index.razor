@page "/Tecnicos/Index"
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject NavigationManager navigation

<PageTitle>Técnicos</PageTitle>
<style>
	/* Aplica Times New Roman a todos los textos de la página */
	body {
		font-family: 'Times New Roman', Times, serif;
	}

	.card-header h3 {
		font-family: 'Times New Roman', Times, serif; /* Cambia la fuente del encabezado */
	}
</style>

<div class="container">
	<div class="card-header bg-success text-white text-center">
		<div style="display: flex; align-items: center; justify-content: center;">
			<!-- Icono izquierdo-->
			<i class="bi bi-people-fill" style="font-size: 2rem;"></i>

			<!-- Título en el centro -->
			<h3 style="margin: 0 15px;"><strong>Registro de Técnicos</strong></h3>

			<!-- Icono derecho -->
			<i class="bi bi-people-fill" style="font-size: 2rem;"></i>
		</div>

	</div>
	<div class="row">
		<div class="col-md-3">
			<label for="filtro" class="form-label"><strong>Filtrar por:</strong></label>
			<InputSelect id="filtro" class="form-select" @bind-Value="filtro">
				<option value="id">ID</option>
				<option value="Nombre">NombreTecnico</option>
				<option value="SueldoHora">SueldoHora</option>
			</InputSelect>
		</div>
		<div class="col-md-6">
			<label for="valorFiltro" class="form-label"><strong>B&uacute;squeda</strong></label>
			<div class="input-group">
				<InputText id="valorFiltro" @bind-Value="valorFiltro" class="form-control" placeholder="Buscar" />
				<button @onclick="Buscar" class="btn btn-secondary bi bi-search" type="button"> Buscar</button>
			</div>
		</div>
	</div>

	<div class="card-body">
		<table class="table table-light table-bordered">
			<thead class="table table-striped text-center bg-success text-white">
				<tr>
					<th>ID</th>
					<th>Nombre Técnico</th>
					<th>Sueldo Técnico</th>
					<th>Ver</th>
					<th>Editar</th>
					<th>Eliminar</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var tecnico in tecnicos)
				{
					<tr>
						<td class="text-center">@tecnico.tecnicoId</td>
						<td class="text-center">@tecnico.nombreTecnico</td>
						<td class="text-center">@tecnico.sueldoHora.ToString("N2")</td> <!-- Aquí aplicamos el formato monetario -->

						<td class="text-center">
							<a href="/Tecnicos/Details/@tecnico.tecnicoId" class="btn btn-secondary text-white bi bi-eye"></a>
						</td>
						<td class="text-center">
							<a href="/Tecnicos/Edit/@tecnico.tecnicoId" class="btn btn-secondary text-white bi bi-pencil-square"></a>
						</td>
						<td class="text-center">
							<a href="/Tecnicos/Delete/@tecnico.tecnicoId" class="btn btn-secondary bi bi-trash"></a>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>

	<div class="row">
		<div class="col text-end">
			<!-- Clase para alinear a la derecha -->
			<a href="/Tecnicos/Create" class="btn btn-success bi bi-plus-square-fill mt-3"> Crear</a>
		</div>
	</div>
</div>

@code {
	public List<Tecnicos> tecnicos = new List<Tecnicos>();
	public string filtro = "id";
	public string valorFiltro = "";

	protected override async Task OnInitializedAsync()
	{
		tecnicos = await tecnicoService.Listar(a => true);
	}

	public async Task Buscar()
	{
		if (!string.IsNullOrWhiteSpace(valorFiltro))
		{
			switch (filtro)
			{
				case "id":
					if (int.TryParse(valorFiltro, out int id))
					{
						tecnicos = await tecnicoService.Listar(w => w.tecnicoId == id);
					}
					break;

				case "Nombre":
					tecnicos = await tecnicoService.Listar(w => w.nombreTecnico.ToLower().Contains(valorFiltro.ToLower()));
					break;

				case "SueldoHora":
					if (float.TryParse(valorFiltro, out float SueldoHora))
					{
						tecnicos = await tecnicoService.Listar(w => w.sueldoHora == SueldoHora);
					}
					break;
			}
		}
		else
		{
			tecnicos = await tecnicoService.Listar(a => true);
		}
	}
}
