@page "/Tecnicos/Edit/{TecnicosId:int}"
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject NavigationManager navigation

<PageTitle>Editar T&eacute;cnico</PageTitle>
<EditForm Model="tecnicos" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header bg-success text-white text-center" style="display: flex; align-items: center; justify-content: center;">
                <i class="bi bi-pencil-square" style="font-size: 2rem;"></i>
                <h4 style="margin: 0 15px;"><strong>Editar Técnico:</strong></h4>
            </div>
            <div class="card-body">
                @*Datos*@
                <label for="id" class="form-label"><strong>ID</strong></label>
                <InputNumber id="id" class="form-control" @bind-Value="tecnicos.TecnicoId" readonly></InputNumber>

                <label for="NombreTecnico" class="form-label"><strong>Nombre</strong></label>
                <InputText id="NombreTecnico" class="form-control" @bind-Value="tecnicos.NombresTecnico"></InputText>
                <ValidationMessage For="@(()=> tecnicos.NombresTecnico)"></ValidationMessage>

                <label for="SueldoHora" class="form-label"><strong>Sueldo por Hora</strong></label>
                <InputNumber id="SueldoHora" class="form-control" @bind-Value="tecnicos.SueldoHora"></InputNumber>
                <ValidationMessage For="@(()=> tecnicos.SueldoHora)"></ValidationMessage>
            </div>
            <div class="card-footer">
                @if (!string.IsNullOrEmpty(Mensaje))
                {
                    <div class="alert alert-danger" role="alert">
                        @Mensaje
                    </div>
                }
                <button type="button" class="btn btn-secondary text-white bi bi-arrow-90deg-left" @onclick="Volver"> Volver</button>
                <button type="submit" class="btn btn-success bi bi-pencil-square"> Modificar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int TecnicosId { get; set; }
    public Tecnicos tecnicos { get; set; } = new Tecnicos();
    public string? Mensaje { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (TecnicosId > 0)
        {
            tecnicos = await tecnicoService.Buscar(TecnicosId);
        }
    }

    public async Task<bool> Validar()
    {
        var existePorNombre = await tecnicoService.ExistePorNombre(tecnicos.NombresTecnico);
        var existePorId = await tecnicoService.Existe(tecnicos.TecnicoId);



        // Retornar verdadero si el nombre o el ID ya existen
        return existePorNombre || existePorId;
    }

    public async Task Modificar()
    {
        if (!await Validar())
        {
            await tecnicoService.Guardar(tecnicos);
            tecnicos = new Tecnicos();
            Volver();
        }
        else
        {
            Mensaje = "El Técnico ya existe. Por favor, elige otro nombre o ID.";
        }
    }

    public void Volver()
    {
        navigation.NavigateTo("/Tecnicos/Index");
    }
}
