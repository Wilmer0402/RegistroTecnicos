@page "/Tecnicos/Edit/{TecnicosId:int}"
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject NavigationManager navigation

<PageTitle>Editar Técnico</PageTitle>
<style>
	/* Aplica Times New Roman a todos los textos de la página */
	body {
		font-family: 'Times New Roman', Times, serif;
	}

	.card-header h1 {
		font-family: 'Times New Roman', Times, serif; /* Cambia la fuente del encabezado */
	}
</style>

<EditForm Model="tecnicos" OnValidSubmit="Modificar">
	<DataAnnotationsValidator />
	<div class="container">
		<div class="card shadow-lg">
			<div class="card-header bg-info text-white text-center">
				<h4><strong>Editar Técnico:</strong></h4>
			</div>
			<div class="card-body">
				@*Datos*@
				<label for="id" class="form-label"><strong>ID</strong></label>
				<InputNumber id="id" class="form-control" @bind-Value="tecnicos.tecnicoId" readonly></InputNumber>

				<label for="NombreTecnico" class="form-label"><strong>Nombre</strong></label>
				<InputText id="NombreTecnico" class="form-control" @bind-Value="tecnicos.nombreTecnico"></InputText>
				<ValidationMessage For="@(()=> tecnicos.nombreTecnico)"></ValidationMessage>

				<label for="SueldoHora" class="form-label"><strong>SueldoHora</strong></label>
				<InputNumber id="SueldoHora" class="form-control" @bind-Value="tecnicos.sueldoHora"></InputNumber>
				<ValidationMessage For="@(()=> tecnicos.sueldoHora)"></ValidationMessage>
			</div>
			<div class="card-footer">
				<button type="button" class="btn btn-info text-white bi bi-arrow-90deg-left" @onclick="Volver"> Volver</button>
				<button type="submit" class="btn btn-danger bi bi-pencil-square"> Modificar</button>
			</div>
		</div>
	</div>

</EditForm>



@code {

	[Parameter]
	public int TecnicosId { get; set; }
	public Tecnicos tecnicos { get; set; } = new Tecnicos();
	public bool Repetido { get; set; }


	protected override async Task OnInitializedAsync()
	{
		if (TecnicosId > 0)
		{
			tecnicos = await tecnicoService.Buscar(TecnicosId);
		}

	}

	public async Task<bool> Validar()
	{
		var existe = await tecnicoService.ValidarTecnico(tecnicos.nombreTecnico);
		Repetido = existe == null;
		return Repetido;

	}


	public async Task Modificar()
	{
		if (!await Validar())
		{
			await tecnicoService.Guardar(tecnicos);
			tecnicos = new Tecnicos();
			Volver();
		}
	}

	public void Volver()
	{
		navigation.NavigateTo("/Tecnicos/Index");
	}






}