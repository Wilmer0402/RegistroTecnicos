@page "/Tecnicos/Create"

@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject NavigationManager navigation

<PageTitle>Crear Nuevo Técnico</PageTitle>
<style>
    /* Aplica Times New Roman a todos los textos de la página */
    body {
        font-family: 'Times New Roman', Times, serif;
    }

    .card-header h1 {
        font-family: 'Times New Roman', Times, serif; /* Cambia la fuente del encabezado */
    }
</style>
<EditForm Model="tecnico" OnValidSubmit="Crear">
    <DataAnnotationsValidator />
    <div class="container"></div>
    <div class="card shadow-lg">
        <div class="card-header bg-success text-white text-center" style="display: flex; align-items: center; justify-content: center;">
            <i class="bi bi-person-fill-add" style="font-size: 2rem;"></i>
            <h4 style="margin: 0 15px;"><strong>Crear Nuevo Técnico:</strong></h4>
        </div>
        <div class="card-body">
            <label for="id" class="form-label"><strong>ID</strong></label>
            <InputNumber id="id" class="form-control" @bind-Value="tecnico.tecnicoId" readonly></InputNumber>

            <label for="nombre" class="form-label"><strong>Nombre Técnico</strong></label>
            <InputText id="nombre" class="form-control" @bind-Value="tecnico.nombreTecnico"></InputText>
            <ValidationMessage For="@(() => tecnico.nombreTecnico)"></ValidationMessage>

            <label for="sueldoHora" class="form-label"><strong>Sueldo por Hora</strong></label>
            <InputNumber id="sueldoHora" class="form-control" @bind-Value="tecnico.sueldoHora"></InputNumber>
            <ValidationMessage For="@(() => tecnico.sueldoHora)"></ValidationMessage>
        </div>
        <div class="card-footer">
            <button type="button" class="btn btn-secondary text-white bi bi-arrow-90deg-left" @onclick="Volver"> Volver</button>
            <button type="submit" class="btn btn-success bi bi-floppy-fill">Guardar</button>
        </div>
    </div>
</EditForm>

@code {
    public Tecnicos tecnico { get; set; } = new Tecnicos();

    public async Task Crear()
    {
        if (!await tecnicoService.Existe(tecnico.tecnicoId))
        {
            await tecnicoService.Insertar(tecnico);
            tecnico = new Tecnicos();
            navigation.NavigateTo("/Tecnicos/Index");
        }
        else
        {
            // Aquí puedes manejar el caso en que el técnico ya exista
        }
    }

    public void Volver()
    {
        navigation.NavigateTo("/Tecnicos/Index");
    }
}
