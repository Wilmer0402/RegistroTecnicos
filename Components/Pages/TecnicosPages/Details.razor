@page "/Tecnicos/Details/"
@page "/Tecnicos/Details/{TecnicosId:int}"
@rendermode InteractiveServer
@inject TecnicoService tecnico
@inject NavigationManager navigation


<PageTitle>Detalles Técnico</PageTitle>
<style>
	/* Aplica Times New Roman a todos los textos de la página */
	body {
		font-family: 'Times New Roman', Times, serif;
	}

	.card-header h5 {
		font-family: 'Times New Roman', Times, serif; /* Cambia la fuente del encabezado */
	}
</style>
<div class="container">
	<div class="card shadow-lg">
		@*Header*@
		<div class="card-header bg-info text-white text-center">
			<h3><strong>Detalles Técnico:</strong></h3>
		</div>
	</div>
	@*Body*@
	<div class="card-body">
		<h5><strong>Detalles del Técnico:</strong></h5>
		@if (tecnicos != null)
		{
			@*Datos*@
			<div class="mb-1">
				<p class="mb-0"><strong>Técnico Id:</strong> @tecnicos.tecnicoId</p>
				<div class="mb-1">
					<p class="mb-0"><strong>Nombre del Técnico:</strong> @tecnicos.nombreTecnico</p>
				</div>
				<div class="mb-1">
					<p class="mb-0"><strong>Sueldo por hora:</strong> @tecnicos.sueldoHora</p>
				</div>
			</div>

		}
	</div>
	@*Footer*@
	<div class="card-footer">
		<button type="button" class="btn btn-info text-white bi bi-arrow-90deg-left" @onclick="Volver"> Volver</button>
	</div>
</div>

@code {

	[Parameter]

	public int TecnicosId { get; set; }
	public Tecnicos tecnicos { get; set; } = new Tecnicos();

	protected override async Task OnInitializedAsync()
	{
		tecnicos = await tecnico.Buscar(TecnicosId);
	}

	public void Volver()
	{
		navigation.NavigateTo("/Tecnicos/Index");

	}


}