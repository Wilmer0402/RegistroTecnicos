@page "/Tecnicos/Details/"
@page "/Tecnicos/Details/{TecnicosId:int}"
@rendermode InteractiveServer
@inject TecnicoService tecnico
@inject NavigationManager navigation


<PageTitle>Detalles del T&eacute;cnico</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		@*Header*@
		<div class="card-header bg-success text-white text-center" style="display: flex; align-items: center; justify-content: center;">
			<i class="bi bi-eye" style="font-size: 2rem;"></i>
			<h4 style="margin: 0 15px;"><strong>Detalles del Técnico:</strong></h4>
		</div>
	</div>
	@*Body*@
	<div class="card-body">
		<h5><strong>Detalles del Técnico:</strong></h5>
		@if (tecnicos != null)
		{
			@*Datos*@
			<div class="mb-1">
				<p class="mb-0"><strong>Técnico Id:</strong> @tecnicos.TecnicoId</p>
				<div class="mb-1">
					<p class="mb-0"><strong>Nombre del Técnico:</strong> @tecnicos.NombresTecnico</p>
				</div>
				<div class="mb-1">
					<p class="mb-0"><strong>Descripci&oacute;n</strong> @tecnicos.Descripcion</p>
					</div>
				<div class="mb-1">
					<p class="mb-0"><strong>Sueldo por hora:</strong> @tecnicos.SueldoHora</p>
				</div>
			</div>

		}
	</div>
	@*Footer*@
	<div class="card-footer">
		<button type="button" class="btn btn-secondary text-white bi bi-arrow-90deg-left" @onclick="Volver"> Volver</button>
	</div>
</div>

@code {

	[Parameter]

	public int TecnicosId { get; set; }
	public Tecnicos tecnicos { get; set; } = new Tecnicos();

	protected override async Task OnInitializedAsync()
	{
		tecnicos = await tecnico.Buscar(TecnicosId);
	}

	public void Volver()
	{
		navigation.NavigateTo("/Tecnicos/Index");

	}


}